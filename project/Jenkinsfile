pipeline{
  agent any
  environment{
    DOCKERHUB_CREDENTIALS = credentials('phantranhieunhan')
  }
  stages{
    stage('Checkout SCM'){
      steps {
         git(
           url: "https://github.com/phantranhieunhan/JenkinsLab.git",
           branch: "master"
         )
      }
    }
    stage('Test & Build'){
      steps{
        // send slack
        slackSend color: "#439FE0", message: "Build Started"

        // build image
        sh 'docker build -f project/Dockerfile -t phantranhieunhan/docker-gs-ping:latest ./project/'

        // push image
        sh 'docker image push phantranhieunhan/docker-gs-ping:latest'
      }
    }
    stage('Login') {
      steps {
        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
      }
    }
    stage('Deploy'){
      // pull image
      steps{
        sh 'docker image pull phantranhieunhan/docker-gs-ping:latest'

      // stop an existing container
        sh '''
          if [ "$( docker container inspect -f '{{.State.Running}}' docker-gs-ping )" = "true" ]; then
            docker stop docker-gs-ping
          fi
          '''

      // start a container
        sh 'docker run -d --rm --name docker-gs-ping -p 8081:8080 phantranhieunhan/docker-gs-ping:latest'
      }
    }
  }

  // post action
  post {
    success {
      slackSend color: "#43E053", message: "Build deployed successfully"
    }
    failure {
      slackSend failOnError: true, color: "#EB1005", message: "Build failed"
    }
    always {
      sh 'docker logout'
    }
  }
}

